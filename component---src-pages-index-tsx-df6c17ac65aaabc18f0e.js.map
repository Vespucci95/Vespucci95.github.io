{"version":3,"file":"component---src-pages-index-tsx-df6c17ac65aaabc18f0e.js","mappings":"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","sources":["webpack://vespucci95.github.io/./src/components/TwoColumnLayout/styled.ts","webpack://vespucci95.github.io/./src/components/TwoColumnLayout/index.tsx","webpack://vespucci95.github.io/./src/components/Banner/styled.ts","webpack://vespucci95.github.io/./src/components/Banner/index.tsx","webpack://vespucci95.github.io/./src/components/SubPost/styled.ts","webpack://vespucci95.github.io/./src/components/SubPost/index.tsx","webpack://vespucci95.github.io/./src/pages/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { MEDIA_QUERY_MAX_WIDTH } from '@/styles/Theme';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    width: 100%;\n    gap: 15px;\n    @media ${MEDIA_QUERY_MAX_WIDTH} {\n        flex-direction: column;\n    }\n`;\n\nexport const LeftColumn = styled.div`\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n`;\nexport const RightColumn = styled.div`\n    display: flex;\n    min-width: 288px;\n    max-width: 288px;\n    flex-direction: column;\n    @media ${MEDIA_QUERY_MAX_WIDTH} {\n        max-width: 100%;\n    }\n`;\n","import React, { ReactNode } from 'react';\nimport * as S from './styled';\n\ntype Props = {\n    leftColumn: ReactNode;\n    rightColumn: ReactNode;\n};\n\nconst TwoColumnLayout = ({ leftColumn, rightColumn }: Props) => {\n    return (\n        <S.Wrapper>\n            <S.LeftColumn>{leftColumn}</S.LeftColumn>\n            <S.RightColumn>{rightColumn}</S.RightColumn>\n        </S.Wrapper>\n    );\n};\n\nexport default TwoColumnLayout;\n","import styled from '@emotion/styled';\nimport { INNER } from '@/constants';\nimport { GatsbyImage } from 'gatsby-plugin-image';\nimport { MEDIA_QUERY_MAX_WIDTH } from '@/styles/Theme';\n\nexport const Container = styled.div`\n    width: 100%;\n    display: flex;\n    margin-bottom: 24px;\n    padding: 10px ${INNER}px;\n    align-items: center;\n    justify-content: space-between;\n    @media ${MEDIA_QUERY_MAX_WIDTH} {\n        display: none;\n    }\n`;\n\nexport const TitleWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n`;\n\nexport const SubTitle = styled.p``;\n\nexport const Title = styled.h1`\n    font-family: Pretendard, sans-serif;\n    font-size: 2.375em;\n    font-weight: 700;\n    line-height: 1.14;\n`;\n\nexport const ProfileWrapper = styled.div`\n    width: 264px;\n    height: 264px;\n    overflow: hidden;\n`;\n\nexport const Mask = styled.div<{ src: string }>`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    mask: url(${props => props.src}) no-repeat 50% 50% / contain;\n    -webkit-mask-image: url(${props => props.src}) no-repeat 50% 50% / contain;\n`;\n\nexport const Profile = styled(GatsbyImage)`\n    width: 100%;\n    height: 100%;\n`;\n","import React from 'react';\nimport * as S from './styled';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nconst Banner = () => {\n    const { image, svg } = useStaticQuery(graphql`\n        query getProfile {\n            image: file(relativePath: { eq: \"profile-image.png\" }) {\n                childImageSharp {\n                    gatsbyImageData(width: 245, height: 245)\n                }\n            }\n            svg: file(relativePath: { eq: \"mask.svg\" }) {\n                publicURL\n            }\n        }\n    `);\n    return (\n        <S.Container>\n            <S.TitleWrapper>\n                <S.Title>\n                    안녕하세요.\n                    <br />\n                    프론트엔드 개발자\n                    <br />\n                    이현서입니다.\n                </S.Title>\n                <S.SubTitle>TypeScript, React, ReactNative를 좋아합니다.</S.SubTitle>\n            </S.TitleWrapper>\n            <S.ProfileWrapper>\n                <S.Mask src={svg.publicURL}>\n                    <S.Profile alt={'profile'} image={image.childImageSharp.gatsbyImageData} draggable={false} />\n                </S.Mask>\n            </S.ProfileWrapper>\n        </S.Container>\n    );\n};\n\nexport default Banner;\n","import styled from '@emotion/styled';\nimport { INNER } from '@/constants';\nimport { MEDIA_QUERY_MAX_WIDTH } from '@/styles/Theme';\n\nexport const Container = styled.div`\n    display: flex;\n    width: 100%;\n    max-width: 288px;\n    flex-direction: column;\n    gap: 28px;\n    padding: ${INNER}px;\n    @media ${MEDIA_QUERY_MAX_WIDTH} {\n        max-width: 100%;\n    }\n`;\n\nexport const Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    cursor: pointer;\n    transition: all 0.2s;\n    &:hover {\n        transform: scale(1.015);\n    }\n`;\n\nexport const Title = styled.p`\n    font-size: 0.875em;\n    font-weight: 300;\n    line-height: 1.14;\n`;\n\nexport const Row = styled.div`\n    display: flex;\n    align-items: flex-end;\n    justify-content: space-between;\n`;\nexport const Info = styled.p`\n    overflow: hidden;\n    white-space: nowrap;\n    font-size: 0.875em;\n    color: #939393;\n    text-overflow: ellipsis;\n`;\nexport const Date = styled.p`\n    white-space: nowrap;\n    font-size: 0.75em;\n    color: #939393;\n`;\n","import React from 'react';\nimport { Edges } from 'GatsbyGraphQL';\nimport { Link } from 'gatsby';\nimport * as S from './styled';\n\ntype Props = {\n    edges: Edges[];\n};\n\nexport const SubPost = ({ edge }: { edge: Edges }) => {\n    const hasHashTag = edge.node.fields.hashTag && edge.node.fields.hashTag.length > 0;\n    return (\n        <Link to={edge.node.fields.slug} style={{ width: '100%' }}>\n            <S.Wrapper>\n                <S.Title>{edge.node.frontmatter.title}</S.Title>\n                <S.Row>\n                    <S.Info>\n                        {edge.node.frontmatter.categories}\n                        {hasHashTag ? ' ∣ ' + edge.node.fields.hashTag.join(', ') : null}\n                    </S.Info>\n                    <S.Date>{edge.node.frontmatter.date}</S.Date>\n                </S.Row>\n            </S.Wrapper>\n        </Link>\n    );\n};\n\nconst SubPosts = ({ edges }: Props) => {\n    return (\n        <S.Container>\n            {edges.map(edge => (\n                <SubPost edge={edge} key={edge.node.id} />\n            ))}\n        </S.Container>\n    );\n};\n\nexport default SubPosts;\n","import * as React from 'react';\nimport type { HeadFC, PageProps } from 'gatsby';\nimport Seo from '@/components/Seo';\nimport { graphql } from 'gatsby';\nimport { AllMarkdownRemark } from 'GatsbyGraphQL';\nimport Banner from '@/components/Banner';\nimport Layout from '@/components/Layout';\nimport MainPosts from '@/components/MainPost';\nimport SubPosts from '@/components/SubPost';\nimport TwoColumnLayout from '@/components/TwoColumnLayout';\n\ntype Props = {\n    mainPosts: AllMarkdownRemark;\n    subPosts: AllMarkdownRemark;\n};\n\nconst IndexPage: React.FC<PageProps> = ({ data }) => {\n    const { mainPosts, subPosts } = data as unknown as Props;\n    return (\n        <Layout>\n            <Banner />\n            <TwoColumnLayout\n                leftColumn={<MainPosts edges={mainPosts.edges} />}\n                rightColumn={<SubPosts edges={subPosts.edges} />}\n            />\n        </Layout>\n    );\n};\n\nexport const Head: HeadFC = () => <Seo title=\"Home\" />;\n\nexport default IndexPage;\n\nexport const query = graphql`\n    query ExcerptPost {\n        mainPosts: allMarkdownRemark(\n            filter: { frontmatter: { stage: { regex: \"/main/\" } } }\n            sort: { frontmatter: { date: DESC } }\n        ) {\n            totalCount\n            edges {\n                ...Post\n            }\n        }\n        subPosts: allMarkdownRemark(\n            filter: { frontmatter: { stage: { regex: \"/sub/\" } } }\n            sort: { frontmatter: { date: DESC } }\n        ) {\n            totalCount\n            edges {\n                ...Post\n            }\n        }\n    }\n`;\n"],"names":["Wrapper","_styled","target","MEDIA_QUERY_MAX_WIDTH","LeftColumn","name","styles","RightColumn","_ref","leftColumn","rightColumn","___EmotionJSX","S","Container","INNER","TitleWrapper","SubTitle","Title","ProfileWrapper","Mask","props","src","Profile","GatsbyImage","Banner","image","svg","useStaticQuery","publicURL","alt","childImageSharp","gatsbyImageData","draggable","Row","Info","Date","SubPost","edge","hasHashTag","node","fields","hashTag","length","Link","to","slug","style","width","frontmatter","title","categories","join","date","_ref2","edges","map","key","id","Head","Seo","data","mainPosts","subPosts","Layout","TwoColumnLayout","MainPosts","SubPosts"],"sourceRoot":""}