{"componentChunkName":"component---src-templates-post-template-tsx","path":"/tips/5/","result":{"data":{"post":{"id":"04db0734-feb5-55b0-99fa-9e086953e5d1","html":"<p>heelo</p>","rawMarkdownBody":"heelo","frontmatter":{"date":"2024.03.15","title":"빠르게 성장하는 회사들의 데일리스크럼 문화 뜯어보기 - 팀스파르타","tags":["언어서비스","객체","마우스"],"stage":"main","categories":"TypeScript","description":"올바른 데일리 스크럼 문화의 정착을위한 과제","thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#98c8f8","images":{"fallback":{"src":"/static/49d8b45029be07b0a504289e47cfa9eb/e2537/img-2.jpg","srcSet":"/static/49d8b45029be07b0a504289e47cfa9eb/38177/img-2.jpg 200w,\n/static/49d8b45029be07b0a504289e47cfa9eb/18869/img-2.jpg 400w,\n/static/49d8b45029be07b0a504289e47cfa9eb/e2537/img-2.jpg 800w,\n/static/49d8b45029be07b0a504289e47cfa9eb/b691d/img-2.jpg 1600w","sizes":"(min-width: 800px) 800px, 100vw"},"sources":[{"srcSet":"/static/49d8b45029be07b0a504289e47cfa9eb/f9911/img-2.webp 200w,\n/static/49d8b45029be07b0a504289e47cfa9eb/3d164/img-2.webp 400w,\n/static/49d8b45029be07b0a504289e47cfa9eb/3d761/img-2.webp 800w,\n/static/49d8b45029be07b0a504289e47cfa9eb/be59a/img-2.webp 1600w","type":"image/webp","sizes":"(min-width: 800px) 800px, 100vw"}]},"width":800,"height":1200}}}},"fields":{"slug":"/tips/5","hashTag":[]},"tableOfContents":""},"prev":{"id":"4f91c7ad-7b77-5078-b89e-e37c3eb68224","rawMarkdownBody":"","frontmatter":{"date":"2024.03.15","title":"빠르게 성장하는 회사들의 데일리스크럼 문화 뜯어보기 - 팀스파르타","tags":["객체"],"stage":"main","categories":"Study"},"fields":{"slug":"/TypeScript/4"}},"next":{"id":"be905e98-b0a8-571f-a8ea-7939d9ca7ce8","rawMarkdownBody":"\n다음 코드는 인사말을 생성하는 #타입스크립트 #함수 이다.\n\n```typescript\n// 인사말을 생성합니다. 결과는 보기 좋게 꾸며져요.\nfunction greet(name: string, title: string) {  \n  return `Hello ${title} ${name}`  \n}\n```\n\n함수의 앞부분에 주석이 있어서 어떤 #기능 을 하는지 쉽게 알 수는 있다.\n그러나 사용자를 위한 문서라면 #JSDoc #스타일 의 #주석 으로 만드는 것이 좋다.\n\n```typescript\n/**\n인사말을 생성합니다. 결과는 보기 좋게 꾸며져요.\n*/\nfunction greet(name: string, title: string) {  \n  return `Hello ${title} ${name}`  \n}\n```\n\n왜나하면 대부분의 편집기는 함수가 호출되는 곳에서 함수에 붙어있는 #JSDoc 스타일의 #주석 을 #툴팁 으로 표시해주기 때문이다.\n그러나 **인라인 주석은 편집기가 표시해주지 않는다.**\n\n#언어서비스 가 JSDoc 스타일을 지원하기 때문에 적극적으로 활용하는 것이 좋다.\n\n만약 공개 API에 주석을 붙인다면 #JSDoc 형태로 작성해야 한다.\n\n#JSDoc 에는 @param 과 @returns 같은 일반적인 규칙을 사용할 수 있다.\n\n한편 타입스크립트 관점에서는 #TSDoc 이라고 부르기도 한다.\n\n```ts\n/**  \n * 인사말을 생성합니다.\n * @param name 인사할 사람의 이름\n * @param title 그 사람의 칭호\n * @returns 보기 좋은 형태의 인사말\n */function greetFullTSDoc(name: string, title: string) {  \n  return `Hello ${title} ${name}`  \n}\n```\n\n타입 정의에 #TSDoc 을 사용할 수도 있다.\n\n```ts\ninterface Vector3D {}  \n/** 특정 시간과 장소에서 수행된 측정 */  \ninterface Measurement {  \n  /** 어디에서 측정되었나? */  \n  position: Vector3D;  \n  /** 언제 측정되었나? epoch에서부터 초 단위로 */  \n  time: number;  \n  /** 측정된 운동량 */  \n  momentum: Vector3D;  \n}\n```\n\n`Measurement` #객체 의 각 #필드 에 #마우스 를 올려보면 #필드 별로 설명을 볼 수 있다.\n\n#TSDoc 주석은 #마크다운 (markdown) 형식으로 꾸며지므로 굵은 글씨, 기울임, 목록을 사용할 수 있다.\n\n주석은 수필처럼 장황하게 쓰지 않도록 주의하도록 하자.\n훌륭한 주석은 간단히 요점만 언급한다.\n\n#JSDoc 에는 타입 정보를 명시하는 규칙 (@param {string} name ...) 이 있지만,\n타입스크립트에서는 타입 정보가 코드에 있기 때문에\n#TSDoc 에서는**타입 정보를 명시하면 안된다.**\n[[아이템 30 문서에 타입 정보를 쓰지 않기]]\n\n### 요약 1\n>익스포트된 함수, #클래스, #타입 에 주석을 달 때는 JSDoc/TSDoc 형태를 사용하자.\n>JSDoc/TSDoc 형태의 주석을 달면 편집기가 주석 정보를 표시해준다.\n### 요약 2\n>@param @returns 구문과 문서 서식을 위해 마크다운을 사용할 수 있다.\n### 요약 3\n>주석에 타입 정보를 포함하면 안된다.\n\n\n\n","frontmatter":{"date":"2023.12.08","title":"Test","tags":["hyunseo","blog"],"stage":"sub","categories":"TypeScript"},"fields":{"slug":"/tips/2"}}},"pageContext":{"title":"빠르게 성장하는 회사들의 데일리스크럼 문화 뜯어보기 - 팀스파르타","slug":"/tips/5","nextSlug":"/tips/2","prevSlug":"/TypeScript/4"}},"staticQueryHashes":["2945020240"],"slicesMap":{}}