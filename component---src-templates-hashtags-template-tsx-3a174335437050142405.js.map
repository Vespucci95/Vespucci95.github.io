{"version":3,"file":"component---src-templates-hashtags-template-tsx-3a174335437050142405.js","mappings":"mKAmEA,IAzCYA,IAAmC,IAAlC,MAAEC,EAAK,WAAEC,GAAmBF,EACrC,MAAM,KAAEG,EAAI,QAAEC,IAAsBC,EAAAA,EAAAA,gBAAe,cAcnD,OACIC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MACID,EAAAA,EAAAA,KAAA,aAAWH,EAAKK,aAAaC,OAAM,MAAMR,IACzCK,EAAAA,EAAAA,KAAA,QAAMI,KAAK,QACXJ,EAAAA,EAAAA,KAAA,QAAMK,SAAS,UAAUC,QAAQ,aACjCN,EAAAA,EAAAA,KAAA,QAAMO,UAAU,eAAeD,QAAQ,8BACvCN,EAAAA,EAAAA,KAAA,QAAMQ,KAAK,WAAWF,QAAQ,2CAC9BN,EAAAA,EAAAA,KAAA,QAAMQ,KAAK,cAAcF,QAAST,EAAKK,aAAaO,eACpDT,EAAAA,EAAAA,KAAA,QAAMK,SAAS,WAAWC,QAAYT,EAAKK,aAAaC,OAAM,MAAMR,KACpEK,EAAAA,EAAAA,KAAA,QAAMK,SAAS,iBAAiBC,QAAST,EAAKK,aAAaO,eAC3DT,EAAAA,EAAAA,KAAA,QAAMK,SAAS,WAAWC,QAASV,QAAAA,EAAcE,EAAQY,aACzDV,EAAAA,EAAAA,KAAA,QAAMK,SAAS,eAAeC,QAAYT,EAAKK,aAAaC,OAAM,MAAMR,KACxEK,EAAAA,EAAAA,KAAA,QAAMK,SAAS,gBAAgBC,QAAYT,EAAKK,aAAaC,OAAM,MAAMR,KACzEK,EAAAA,EAAAA,KAAA,QAAMK,SAAS,YAAYC,QAAST,EAAKK,aAAaC,UACtDH,EAAAA,EAAAA,KAAA,QAAMQ,KAAK,eAAeF,QAAQ,aAClCN,EAAAA,EAAAA,KAAA,QAAMQ,KAAK,gBAAgBF,QAAYT,EAAKK,aAAaC,OAAM,MAAMR,KACrEK,EAAAA,EAAAA,KAAA,QAAMQ,KAAK,sBAAsBF,QAAST,EAAKK,aAAaO,eAC5DT,EAAAA,EAAAA,KAAA,QAAMQ,KAAK,gBAAgBF,QAAST,EAAKK,aAAaS,WACtDX,EAAAA,EAAAA,KAAA,QAAMQ,KAAK,2BAA2BF,QAAQ,iDAC9CN,EAAAA,EAAAA,KAAA,QAAMQ,KAAK,0BAA0BF,QAAQ,8CAC7CN,EAAAA,EAAAA,KAAA,QAAMQ,KAAK,eAAeF,QAAQ,gBAClCN,EAAAA,EAAAA,KAAA,QAAMQ,KAAK,kBAAkBF,QAAQ,eACtC,C,4GCtDX,MAqBaM,EAAOC,IAA0E,IAAzE,YAAEC,GAAkED,EACrF,OAAOb,EAAAA,EAAAA,KAACe,EAAAA,EAAG,CAACpB,MAAM,YAAa,EAGnC,UAzB6CD,IAAqB,IAApB,YAAEoB,GAAapB,EACzD,MAAM,SAAEsB,GAAaF,EACrB,OACId,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,MACHjB,EAAAA,EAAAA,KAAA,OAAKkB,MAAO,CAAEC,QAAS,OAAQC,cAAe,MAAOC,SAAU,OAAQC,IAAK,SACvEN,EAASO,KAAI,CAACC,EAASC,KAEhBzB,EAAAA,EAAAA,KAAA,OAAK0B,IAAKF,IACNxB,EAAAA,EAAAA,KAAC2B,EAAAA,KAAI,CAACC,GAAE,YAAcJ,EAAQK,QAAQ,KAAM,MACxC7B,EAAAA,EAAAA,KAAA,KAAG0B,IAAKD,EAAOP,MAAO,CAAEY,MAAO,YAC1BN,QAOpB,C","sources":["webpack://vespucci95.github.io/./src/components/Seo/index.tsx","webpack://vespucci95.github.io/./src/templates/hashtags_template.tsx"],"sourcesContent":["import * as React from 'react';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\nimport { MetaData } from 'GatsbyGraphQL';\nimport { graphql, useStaticQuery } from 'gatsby';\n\ntype SeoProps = {\n    meta: MetaData;\n    ogImage: {\n        childImageSharp: {\n            gatsbyImageData: IGatsbyImageData;\n        };\n        publicURL: string;\n    };\n    profileImage: {\n        childImageSharp: {\n            gatsbyImageData: IGatsbyImageData;\n        };\n        publicURL: string;\n    };\n};\n\ntype Props = {\n    title: string;\n    ogImageURL?: string;\n};\n\nconst Seo = ({ title, ogImageURL }: Props) => {\n    const { meta, ogImage }: SeoProps = useStaticQuery(graphql`\n        query MetaQuery {\n            meta: site {\n                ...MetaData\n            }\n            ogImage: file(name: { eq: \"og-image\" }) {\n                ...ImageURL\n            }\n            profileImage: file(name: { eq: \"profile-image\" }) {\n                ...ImageURL\n            }\n        }\n    `);\n\n    return (\n        <>\n            <title>{`${meta.siteMetadata.author} | ${title}`}</title>\n            <meta lang=\"ko\" />\n            <meta property=\"og:type\" content=\"website\" />\n            <meta httpEquiv=\"content-type\" content=\"text/html; charset=UTF-8\" />\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n            <meta name=\"description\" content={meta.siteMetadata.description} />\n            <meta property=\"og:title\" content={`${meta.siteMetadata.author} | ${title}`} />\n            <meta property=\"og:description\" content={meta.siteMetadata.description} />\n            <meta property=\"og:image\" content={ogImageURL ?? ogImage.publicURL} />\n            <meta property=\"og:site_name\" content={`${meta.siteMetadata.author} | ${title}`} />\n            <meta property=\"og:site_title\" content={`${meta.siteMetadata.author} | ${title}`} />\n            <meta property=\"og:author\" content={meta.siteMetadata.author} />\n            <meta name=\"twitter:card\" content=\"summary\" />\n            <meta name=\"twitter:title\" content={`${meta.siteMetadata.author} | ${title}`} />\n            <meta name=\"twitter:description\" content={meta.siteMetadata.description} />\n            <meta name=\"twitter:image\" content={meta.siteMetadata.siteUrl} />\n            <meta name=\"google-site-verification\" content=\"NRo4yKk2rmtkRhrG_L6RCXb1Jcw8VZwg6beWfo3U2t0\" />\n            <meta name=\"naver-site-verification\" content=\"bad4dc83cef571597393ea6e13eed3807d2b3a7f\" />\n            <meta name=\"twitter:site\" content=\"Vespucci95\" />\n            <meta name=\"twitter:creator\" content=\"Vespucci95\" />\n        </>\n    );\n};\n\nexport default Seo;\n","import * as React from 'react';\nimport { Link, PageProps } from 'gatsby';\nimport Seo from '@/components/Seo';\nimport Layout from '@/components/Layout';\n\ntype PageContext = {\n    hashTags: string[];\n};\n\nconst HashTagTemplate: React.FC<PageProps> = ({ pageContext }) => {\n    const { hashTags } = pageContext as PageContext;\n    return (\n        <Layout>\n            <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', gap: '20px' }}>\n                {hashTags.map((hashTag, index) => {\n                    return (\n                        <div key={hashTag}>\n                            <Link to={`/hashtag/${hashTag.replace(/#/g, '')}`}>\n                                <p key={index} style={{ color: '#4078c0' }}>\n                                    {hashTag}\n                                </p>\n                            </Link>\n                        </div>\n                    );\n                })}\n            </div>\n        </Layout>\n    );\n};\n\nexport const Head = ({ pageContext }: { pageContext: { hashTag: string; title: string } }) => {\n    return <Seo title=\"HashTags\" />;\n};\n\nexport default HashTagTemplate;\n"],"names":["_ref","title","ogImageURL","meta","ogImage","useStaticQuery","___EmotionJSX","React","siteMetadata","author","lang","property","content","httpEquiv","name","description","publicURL","siteUrl","Head","_ref2","pageContext","Seo","hashTags","Layout","style","display","flexDirection","flexWrap","gap","map","hashTag","index","key","Link","to","replace","color"],"sourceRoot":""}